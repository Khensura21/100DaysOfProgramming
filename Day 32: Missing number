#Day32
//#100DaysOfProgramming
//Time Spent: 1 hr 
//Summary of Challenge: Given an array containing n distinct numbers taken from 0, 1, 2, ..., n, find the one that is missing from the array.
//Thoughts: I solved the problem initially with a suboptimal approach. Then, too get to the optimal solutions, it required me to look at previous solutions

/**
 * @param {number[]} nums
 * @return {number}
 */
var missingNumber = function(nums) {
    //brute force method
//     nums = nums.sort((a,b) => a - b); //[0,1,3]
//     for(let i = 0; i <= nums.length; i++)
//         if (i != nums[i])
//             return i
    
//runtime : O(nlogn)
//spacecomplexity: O(n)

    //better method
    let digits = new Set(nums);
    for(let i = 0 ; i <= nums.length; i++) {
        if (!digits.has(i))
                return i;
    }
    
    //runtime: O(n)
    //spacetime: O(n)
    
    //Optimal solution (using Gauss eqaution)
    
    

    
};


