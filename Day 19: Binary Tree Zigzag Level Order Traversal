//#Day19
//#100DaysOfProgramming
//Time Spent: 50 mins
//Summary of Challenge: Given a binary tree, return the zigzag level order traversal of its nodes' values.
//(ie, from left to right, then right to left for the next level and alternate between).


/**
 * Definition for a binary tree node.
 * function TreeNode(val) {
 *     this.val = val;
 *     this.left = this.right = null;
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number[][]}
 */
var zigzagLevelOrder = function(root) {
    if(!root) return [];
    let res = [];
     helper(root, 0, res);
   
    function helper(node, level, res) {
        if (!node) return
        
        if (!res[level]) res[level] = [];
        
        if (level % 2 == 0) {
            res[level].push(node.val);
        } else {
            res[level].unshift(node.val);
        }
            
        helper(node.left, level + 1, res)
        helper(node.right, level + 1, res)
    }
    
    return res
};
