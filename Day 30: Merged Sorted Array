/#Day30
//#100DaysOfProgramming
//Time Spent: 51 mins
//Summary of Challenge: Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.
//Thoughts: Another classic problem . I struggled with it. I believe I have to walk through this again on a white board.
//The concept was pretty straight forward, but coding it up was slightly tricky


/**
 * @param {number[]} nums1
 * @param {number} m
 * @param {number[]} nums2
 * @param {number} n
 * @return {void} Do not return anything, modify nums1 in-place instead.
 */
var merge = function(nums1, m, nums2, n) {
    let p1 = m - 1;
    let p2 = n - 1;
    let p = m + n - 1;
    
    while (p2 >= 0 && p1 >= 0) {
       if (nums1[p1] < nums2[p2]){
           nums1[p] = nums2[p2];
           p2--;
           
       }
        else {
            nums1[p] = nums1[p1];
            p1--; 
        }
        p--;
    }
    
    return nums1
};

//runtime: O(n + m)
//space complexity: O(1)
