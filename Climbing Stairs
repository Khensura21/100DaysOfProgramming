//#Day47
//#100DaysOfProgramming
//Time Spent: 45 mins
//Summary of Challenge: You are climbing a stair case. It takes n steps to reach to the top.
//Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?
//Thoughts: Very similar to fibonacci, in fact, the same type of problem. So I definitely was able to understand it from a different angle 

/**
 * @param {number} n
 * @return {number}
 */
var climbStairs = function(n) {
    //capture duplicate calculations
    let mem = {}

    function helper(n) {
        let res;
        
        if (n in mem)
            return mem[n];
        
        if (n <= 2) 
          res = n;
        
        else 
            res = helper(n-1) + helper(n-2)
     
        mem[n] = res;
        return res
    }
    
    return helper(n)
    
};
