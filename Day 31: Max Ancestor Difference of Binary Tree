

//Given the root of a binary tree, 
//find the maximum value V for which there exists different nodes A and B where V = |A.val - B.val| and A is an ancestor of B.


/**
 * Definition for a binary tree node.
 * function TreeNode(val) {
 *     this.val = val;
 *     this.left = this.right = null;
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number}
 */
var maxAncestorDiff = function(root) {
    let max = [];
    
    function recursion(node){
        //base case 
        if (!node) return
        if (node.left)
            max.push(Math.abs(node.val - node.left.val));
            recursion(node.left)
        if (node.right)
            max.push(Math.abs(node.val - node.right.val))
            recursion(node.right)
        
    }
  
    return recursion(root);
};
